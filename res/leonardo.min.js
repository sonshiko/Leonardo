const plagiart={init(t){window.onload=this.main(t)},main(t){this.createHtml(t),this.canvasOrig=document.getElementById("original-image"),this.canvasCopy=document.getElementById("copy-image"),this.canvasHeight=this.canvasOrig.parentElement.clientHeight,this.canvasWidth=this.canvasOrig.parentElement.clientWidth,this.canvasOrig.width=this.canvasWidth,this.canvasOrig.height=this.canvasHeight,this.canvasCopy.width=this.canvasWidth,this.canvasCopy.height=this.canvasHeight,this.moveUp=document.querySelectorAll('[data-id="Up"]'),this.moveLeft=document.querySelectorAll('[data-id="Left"]'),this.moveBottom=document.querySelectorAll('[data-id="Bottom"]'),this.moveRight=document.querySelectorAll('[data-id="Right"]'),this.mirror=document.querySelectorAll('[data-id="Mirror"]'),this.rotate90=document.querySelectorAll('[data-id="Rotate90"]'),this.rotate=document.querySelectorAll('[data-id="Rotate"]'),this.inputHeight=document.getElementById("canvasHeight"),this.inputWidth=document.getElementById("canvasWidth"),this.origImgHeight,this.origImgWidth;var e=this.canvasOrig.getContext("2d"),a=this.canvasCopy.getContext("2d"),i=new Image;i.onload=function(){plagiart.resizeCanvasToImg(plagiart.canvasOrig,i),plagiart.origImgHeight=i.height,plagiart.origImgWidth=i.width,plagiart.inputHeight.removeAttribute("disabled"),plagiart.inputHeight.value=0,plagiart.inputWidth.removeAttribute("disabled"),plagiart.inputWidth.value=0,e.drawImage(i,0,0)};var n=new Image;n.onload=function(){plagiart.resizeCanvasToImg(plagiart.canvasCopy,n),a.drawImage(n,0,0)},this.switchSidebar();let l=document.getElementById("original");l.addEventListener("change",function(){this.files&&this.files[0]&&plagiart.readFile("original",i,this.files[0])});let o=document.getElementById("clone");o.addEventListener("change",function(){this.files&&this.files[0]&&plagiart.readFile("clone",n,this.files[0])}),this.changeOpacity(this.canvasCopy),this.changeScale(this.canvasCopy,document.getElementById("scaleCopy")),this.changeScale(this.canvasOrig,document.getElementById("scaleOrig")),this.moveUp.forEach(function(t){t.addEventListener("click",function(){plagiart.moveCopy("up",t.getAttribute("data-target"))})}),this.moveLeft.forEach(function(t){t.addEventListener("click",function(){plagiart.moveCopy("left",t.getAttribute("data-target"))})}),this.moveBottom.forEach(function(t){t.addEventListener("click",function(){plagiart.moveCopy("bottom",t.getAttribute("data-target"))})}),this.moveRight.forEach(function(t){t.addEventListener("click",function(){plagiart.moveCopy("right",t.getAttribute("data-target"))})}),this.mirror.forEach(function(t){t.addEventListener("click",function(){plagiart.moveCopy("mirror",t.getAttribute("data-target"))})}),this.rotate90.forEach(function(t){t.addEventListener("click",function(){plagiart.moveCopy("rotate90",t.getAttribute("data-target"))})}),this.rotate.forEach(function(t){t.addEventListener("click",function(){plagiart.moveCopy("rotate",t.getAttribute("data-target"))})}),this.inputHeight.addEventListener("keyup",function(){plagiart.inputWidth.value=this.value*plagiart.origImgWidth/plagiart.origImgHeight}),this.inputWidth.addEventListener("keyup",function(){plagiart.inputHeight.value=this.value*plagiart.origImgHeight/plagiart.origImgWidth}),this.canvasOrig.addEventListener("mousemove",function(t){const e=t.target;var a=e.getBoundingClientRect(),i={x:t.clientX-a.x,y:t.clientY-a.y},t={width:a.width,heigth:a.height},a={width:0==plagiart.inputWidth.value?a.width:plagiart.inputWidth.value,height:0==plagiart.inputHeight.value?a.height:plagiart.inputHeight.value},t={x:Math.round(a.width*i.x/t.width),y:Math.round(a.height*i.y/t.heigth)};document.getElementById("remappedX").innerText=t.x,document.getElementById("remappedY").innerText=t.y}),this.mode="scale";const r=document.getElementById("plagiartWrapper");r.classList.add("scale-mode"),this.modeInputs=document.getElementsByClassName("mode");for(let t=0;t<this.modeInputs.length;t++)this.modeInputs[t].addEventListener("change",function(t){console.log("mode ",plagiart.mode),"scale"===plagiart.mode?(plagiart.mode="compare",r.classList.remove("scale-mode"),r.classList.add("compare-mode")):(plagiart.mode="scale",r.classList.remove("compare-mode"),r.classList.add("scale-mode")),console.log("mode ",plagiart.mode)})},readFile(t,e,a){var i=new FileReader;i.addEventListener("load",function(t){e.src=t.target.result}),i.readAsDataURL(a)},switchSidebar(){let t=document.getElementById("sidebar-position"),e="right",a=document.getElementById("main-container");t.addEventListener("click",function(){"right"===e?(e="left",document.getElementById("sidebar-position").innerHTML="Place sidebar right"):(e="right",document.getElementById("sidebar-position").innerHTML="Place sidebar left"),a.classList.toggle("wrapper-reverse")})},changeOpacity(t){const e=document.getElementById("opacity");e.value=.5,plagiart.canvasCopy.style.opacity=.5,e.addEventListener("input",function(t){t=t.target.value;plagiart.canvasCopy.style.opacity=t})},changeScale(e,t){t.value=100,e.style.transform=`scale(${t.value/100})`,t.addEventListener("input",function(t){t=t.target.value;e.style.transform=`scale(${t/100})`})},resizeCanvasToImg(t,e){const a=t.getContext("2d");a.fillStyle="white",a.fillRect(0,0,t.height,t.width),t.width=e.width,t.height=e.height},moveCopy(t,e){let c=document.getElementById("original-wrapper");"copy"===e&&(c=document.getElementById("copy-wrapper"));switch(t){case"up":a(-2,"data-vertical");break;case"left":a(-2,"data-horizontal");break;case"bottom":a(2,"data-vertical");break;case"right":a(2,"data-horizontal");break;case"mirror":a(2,"mirror");break;case"rotate90":a(2,"rotate90");break;case"rotate":a(2,"rotate")}function a(t,e){let a=null===c.getAttribute("data-vertical")?0:parseInt(c.getAttribute("data-vertical")),i=null===c.getAttribute("data-horizontal")?0:parseInt(c.getAttribute("data-horizontal")),n=null===c.getAttribute("data-mirror")?0:parseInt(c.getAttribute("data-mirror")),l=null===c.getAttribute("data-rotate")?0:parseInt(c.getAttribute("data-rotate"));switch(e){case"data-horizontal":i+=t,c.setAttribute("data-horizontal",i);break;case"data-vertical":a+=t,c.setAttribute("data-vertical",a);break;case"mirror":n=180===n?0:180,c.setAttribute("data-mirror",n);break;case"rotate90":l+=90,c.setAttribute("data-rotate",l);break;case"rotate":l+=1,c.setAttribute("data-rotate",l)}var o="translateY("+a+"px)",r="translateX("+i+"px)",s="rotateY("+n+"deg)",e="rotate("+l+"deg)";c.style.transform=r+" "+o+" "+s+" "+e}},createHtml(t){const e=document.getElementById(t);e.innerHTML=`
			<!-- Begin of header -->
			<header class="header">
				<div class="header-controls">
					<label class="label-radio">
						<input type="radio" id="scaleMode" class="mode input-radio" name="mode" checked><span>Scale mode</span>
					</label>
					<label class="label-radio radio-inverted">
						<input type="radio" id="compareMode" name="mode" class="mode input-radio"><span>Compare mode</span>
					</label>
				</div>
			</header>
		<!-- End of header -->
		<!-- Main -->
		<main class="main">
			<!-- -->
			<div id="main-container" class="wrapper">
				<!-- The area to load pictures -->
				<div class="img-holder wrapper-inner">
					<div class="canvas-wrapper" id="original-wrapper">
						<canvas id="original-image" class="original-image"></canvas>
					</div>
					<div class="canvas-wrapper compare-mode__element" id="copy-wrapper">
						<canvas id="copy-image"
								class="copy-image"></canvas>
					</div>
				</div>
				<!-- Right-side area with interface -->
				<div class="wrapper-inner controll-panel">
					<div class="flex-full-width">
						<button class="btn full-width-btn" id="sidebar-position">
							Place sidebar left
						</button>
					</div>
					<ul  class="panel-list">
						<li>
							<ul class="panel-list-item">
								<li class="panel-item">
									<figure>
										<img id="originalPicture" class="buttons" src="img/button-orig.jpg" alt="Press this button to load original picture">
											<figcaption>Original picture</figcaption>
									</figure>
									<label for="original" class="input-label btn full-width-btn">
										Upload image
										<input type="file"
											   id="original" name="original"
											   placeholder="Original file"
											   accept="image/png, image/jpeg">
									</label>
								</li>
								<li class="panel-item scale-mode__element">
									<label for="canvasWidth">
										Enter canvas Width:
										<input type="number"
											   id="canvasWidth"
											   data-input="height"
											   class="sizeInput input" value="0"
											   disabled>
									</label>
									<label for="canvasHeight">
										Enter canvas Height:
										<input type="number"
											   id="canvasHeight"
											   data-input="width"
											   class="sizeInput input"
											   value="0"
											   disabled>
									</label>
								</li>
								<li class="panel-item scale-mode__element">
									<p>Point coordinates for new canvas:</p>
									<p>By horisontal: <b id="remappedX"></b></p>
									<p>By vertical: <b id="remappedY"></b></p>
								</li>
								<li class="panel-item compare-mode__element">
									<form name="scaleForm" oninput="rangevalue.value = scale.valueAsNumber">
										<label for="scaleOrig">Scale:</label>
										<output name="rangevalue" for="range">100</output>
										<input type="range" id="scaleOrig" name="scale" data-id="scale"
										   class="input"
										   value="100"
										   min="0" max="200" step="1">
									  
									</form>		
									
								</li>
								<li class="panel-item compare-mode__element">
									<div class="move-btn-wrapper">
										<div class="move-btn-container">
											<button class="btn move-btn" title="Up" data-target="original"  data-id="Up"></button>
											<button class="btn move-btn" title="Right" data-target="original"  data-id="Right"></button>
											<button class="btn move-btn" title="Left" data-target="original"  data-id="Left"></button>
											<button class="btn move-btn" title="Bottom" data-target="original"  data-id="Bottom"></button>
										</div>
									</div>
								</li>
								<li>
									<button class="btn" title="Rotate 90 clockwise" data-target="original" data-id="Rotate90">Rotate 90 clockwise</button>
									<button class="btn" title="Rotate 1 clockwise" data-target="original"  data-id="Rotate">Rotate 1 clockwise</button>
								</li>
							</ul>
						</li>
						
						<li class="compare-mode__element">
							<ul class="panel-list-item ">
								
								<li class="panel-item">
									<figure>
										<!-- <button id="artistsPicture" class="buttons" type="button">Load the your own picture</button> -->
										<img id="artistsPicture" class="buttons" src="img/button-custom.jpg" alt="Press this button to load your picture">
											<figcaption>Your picture</figcaption>
									</figure>
									<label for="clone" class="input-label btn full-width-btn">
										Upload image
										<input type="file"
											   id="clone" name="clone"
											   placeholder="Your file"
											   accept="image/png, image/jpeg">
									</label>
								</li>
								<li class="panel-item compare-mode__element">
									<form name="scaleForm" oninput="rangevalue.value = scale.valueAsNumber">
										<label for="scaleCopy">Scale:</label>
										<output name="rangevalue" for="range">100</output>
										<input type="range" id="scaleCopy" name="scale" data-id="scale"
										   class="input"
										   value="100"
										   min="0" max="200" step="1">
									  
									</form>		
								</li>
								<li class="panel-item compare-mode__element">
									<div class="move-btn-wrapper">
										<div class="move-btn-container">
											<button class="btn move-btn" title="Up" data-target="copy" data-id="Up"></button>
											<button class="btn move-btn" title="Right" data-target="copy" data-id="Right"></button>
											<button class="btn move-btn" title="Left" data-target="copy" data-id="Left"></button>
											<button class="btn move-btn" title="Bottom" data-target="copy" data-id="Bottom"></button>
										</div>
									</div>
								</li>
								<li>
									<button class="btn" title="Rotate 90 clockwise" data-target="copy" data-id="Rotate90">Rotate 90 clockwise</button>
									<button class="btn" title="Rotate 1 clockwise" data-target="copy"  data-id="Rotate">Rotate 1 clockwise</button>
								</li>
								<li class="panel-item">
									<form name="scaleForm" oninput="opacityvalue.value = opacity.valueAsNumber">
										<label for="opacity">Opacity:</label>
										<output name="opacityvalue" for="opacity">0.5</output>
										<input type="range" id="opacity" name="opacity"
											   class="input"
				
											   value="0.5"
											   min="0" max="1" step="0.05">
								   </form>
								</li>				
								<li class="panel-item compare-mode__element">
									<button class="btn" title="Mirror" data-target="copy" data-id="Mirror">Mirror</button>
								</li>
							</ul>
						</li>
					</ul>
				</div>
			</div>
		</main>
		<!-- End of main -->

		<!-- Footer -->
		<footer class="footer">
			<div>

			</div>

		</footer>
		<!-- End of footer -->
		`}};plagiart.init("plagiartWrapper");